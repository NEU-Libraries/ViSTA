from transcription_model import TranscriptionModel
from transcription import Transcription
import google.generativeai as genai
import os


class GeminiTranscriptionModel(TranscriptionModel):

    def __init__(self,prompt_file):
        super().__init__(prompt_file)
        goog_key = os.environ.get("GOOG_KEY")
        genai.configure(api_key=goog_key)
        generation_config = genai.GenerationConfig(temperature=0)
        self.__model = genai.GenerativeModel("gemini-1.5-pro", generation_config=generation_config)


    def generate_raw_transcription(self,image_file):
        """
        Generates a raw transcription of the text from the given image_file
        Inputs:
            - None
        Outputs:
            - returns a Transcription object from the response generated by the model
            - self.token_tracker is initialized with the number of tokens used in the request
        """
        response = self.__model.generate_content(contents=[self.prompt,image_file])
        transcription = Transcription(response.text)
        token_data = response.usage_metadata
        self.token_tracker.update_total_token_count(token_data.total_token_count)
        self.token_tracker.update_total_input_token_count(token_data.prompt_token_count)
        self.token_tracker.update_total_output_token_count(token_data.candidates_token_count)
        return transcription
